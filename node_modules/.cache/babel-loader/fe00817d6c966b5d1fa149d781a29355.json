{"ast":null,"code":"var _jsxFileName = \"/home/imilanez/codeChallenges/restcountries-ivan/src/components/basic.autosuggest.js\";\n// basic.autosuggest.js\nimport React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport './autosuggest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BasicAutoSuggest extends React.Component {\n  constructor() {\n    super(); //Define state for value and suggestion collection\n\n    this.cars = [{\n      name: 'Suzuki',\n      origin: 'Japan',\n      year: 1909\n    }, {\n      name: 'Fiat',\n      origin: 'Italy',\n      year: 1899\n    }, {\n      name: 'Honda',\n      origin: 'Japan',\n      year: 1948\n    }, {\n      name: 'Porch',\n      origin: 'Germany',\n      year: 1954\n    }, {\n      name: 'Audi',\n      origin: 'Germany',\n      year: 1910\n    }];\n\n    this.getSuggestions = value => {\n      const inputValue = value.trim().toLowerCase();\n      const inputLength = inputValue.length;\n      return inputLength === 0 ? [] : this.cars.filter(lang => lang.name.toLowerCase().slice(0, inputLength) === inputValue);\n    };\n\n    this.getSuggestionValue = suggestion => suggestion.name;\n\n    this.renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [suggestion.name, \" | Founded in \", suggestion.year, \", \", suggestion.origin]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this);\n\n    this.onChange = (event, {\n      newValue\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.setState({\n        suggestions: this.getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  } // Collection of data\n\n\n  render() {\n    const {\n      value,\n      suggestions\n    } = this.state; // Option props\n\n    const inputProps = {\n      placeholder: 'Type car name',\n      value,\n      onChange: this.onChange\n    }; // Adding AutoSuggest component\n\n    return /*#__PURE__*/_jsxDEV(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      getSuggestionValue: this.getSuggestionValue,\n      renderSuggestion: this.renderSuggestion,\n      inputProps: inputProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default BasicAutoSuggest;","map":{"version":3,"sources":["/home/imilanez/codeChallenges/restcountries-ivan/src/components/basic.autosuggest.js"],"names":["React","Autosuggest","BasicAutoSuggest","Component","constructor","cars","name","origin","year","getSuggestions","value","inputValue","trim","toLowerCase","inputLength","length","filter","lang","slice","getSuggestionValue","suggestion","renderSuggestion","onChange","event","newValue","setState","onSuggestionsFetchRequested","suggestions","onSuggestionsClearRequested","state","render","inputProps","placeholder"],"mappings":"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","sourcesContent":["// basic.autosuggest.js\nimport React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport './autosuggest.css';\n\nclass BasicAutoSuggest extends React.Component {\n    constructor() {\n        super();\n\n        //Define state for value and suggestion collection\n        this.state = {\n            value: '',\n            suggestions: []\n        };\n    }\n\n    // Collection of data\n    cars = [\n        {\n            name: 'Suzuki',\n            origin: 'Japan',\n            year: 1909\n        },\n        {\n            name: 'Fiat',\n            origin: 'Italy',\n            year: 1899\n        },\n        {\n            name: 'Honda',\n            origin: 'Japan',\n            year: 1948\n        },\n        {\n            name: 'Porch',\n            origin: 'Germany',\n            year: 1954\n        },\n        {\n            name: 'Audi',\n            origin: 'Germany',\n            year: 1910\n        }\n    ];\n\n    // Filter logic\n    getSuggestions = value => {\n        const inputValue = value.trim().toLowerCase();\n        const inputLength = inputValue.length;\n\n        return inputLength === 0 ? [] : this.cars.filter(lang =>\n            lang.name.toLowerCase().slice(0, inputLength) === inputValue\n        );\n    };\n\n    // Trigger suggestions\n    getSuggestionValue = suggestion => suggestion.name;\n\n    // Render Each Option\n    renderSuggestion = suggestion => (\n        <div>\n            {suggestion.name} | Founded in {suggestion.year}, {suggestion.origin}\n        </div>\n    );\n\n    // OnChange event handler\n    onChange = (event, { newValue }) => {\n        this.setState({\n            value: newValue\n        });\n    };\n\n    // Suggestion rerender when user types\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n    };\n\n    // Triggered on clear\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    render() {\n        const { value, suggestions } = this.state;\n\n        // Option props\n        const inputProps = {\n            placeholder: 'Type car name',\n            value,\n            onChange: this.onChange\n        };\n\n        // Adding AutoSuggest component\n        return (\n            <Autosuggest\n                suggestions={suggestions}\n                onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                getSuggestionValue={this.getSuggestionValue}\n                renderSuggestion={this.renderSuggestion}\n                inputProps={inputProps}\n            />\n        );\n    }\n}\n\nexport default BasicAutoSuggest;"]},"metadata":{},"sourceType":"module"}