{"ast":null,"code":"var _jsxFileName = \"/home/imilanez/codeChallenges/restcountries-ivan/src/components/server.autosuggest.js\";\nimport React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport './autosuggest.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ServerAutoSuggest extends React.Component {\n  constructor() {\n    super();\n\n    this.getSuggestions = async value => {\n      const inputValue = value.trim().toLowerCase();\n      let response = await fetch(\"https://restcountries.eu/rest/v2/name/\" + inputValue + \"?fields=name;region;population;languages;currencies\");\n      let data = await response.json();\n      return data;\n    };\n\n    this.getSuggestionValue = suggestion => suggestion.name;\n\n    this.renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"sugg-option\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"name\",\n        children: [suggestion.name, \" | \", suggestion.region, \" | \", suggestion.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this);\n\n    this.onChange = (event, {\n      newValue\n    }) => {\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = ({\n      value\n    }) => {\n      this.getSuggestions(value).then(data => {\n        if (data.Error) {\n          this.setState({\n            suggestions: []\n          });\n        } else {\n          this.setState({\n            suggestions: data\n          });\n        }\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      value: '',\n      suggestions: []\n    };\n  }\n\n  render() {\n    const {\n      value,\n      suggestions\n    } = this.state;\n    const inputProps = {\n      placeholder: 'Type country name',\n      value,\n      onChange: this.onChange\n    };\n    return /*#__PURE__*/_jsxDEV(Autosuggest, {\n      suggestions: suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      getSuggestionValue: this.getSuggestionValue,\n      renderSuggestion: this.renderSuggestion,\n      inputProps: inputProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ServerAutoSuggest;","map":{"version":3,"sources":["/home/imilanez/codeChallenges/restcountries-ivan/src/components/server.autosuggest.js"],"names":["React","Autosuggest","ServerAutoSuggest","Component","constructor","getSuggestions","value","inputValue","trim","toLowerCase","response","fetch","data","json","getSuggestionValue","suggestion","name","renderSuggestion","region","population","onChange","event","newValue","setState","onSuggestionsFetchRequested","then","Error","suggestions","onSuggestionsClearRequested","state","render","inputProps","placeholder"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAO,mBAAP;;;AAEA,MAAMC,iBAAN,SAAgCF,KAAK,CAACG,SAAtC,CAAgD;AAC5CC,EAAAA,WAAW,GAAG;AACV;;AADU,SASdC,cATc,GASG,MAAOC,KAAP,IAAiB;AAC9B,YAAMC,UAAU,GAAGD,KAAK,CAACE,IAAN,GAAaC,WAAb,EAAnB;AACA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2CJ,UAA3C,GAAwD,qDAAzD,CAA1B;AACA,UAAIK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,aAAOD,IAAP;AACH,KAda;;AAAA,SAgBdE,kBAhBc,GAgBOC,UAAU,IAAIA,UAAU,CAACC,IAhBhC;;AAAA,SAkBdC,gBAlBc,GAkBKF,UAAU,iBACzB;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,6BACI;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,mBACKA,UAAU,CAACC,IADhB,SACyBD,UAAU,CAACG,MADpC,SAC+CH,UAAU,CAACI,UAD1D;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAnBU;;AAAA,SA0BdC,QA1Bc,GA0BH,CAACC,KAAD,EAAQ;AAAEC,MAAAA;AAAF,KAAR,KAAyB;AAChC,WAAKC,QAAL,CAAc;AACVjB,QAAAA,KAAK,EAACgB;AADI,OAAd;AAGH,KA9Ba;;AAAA,SAgCdE,2BAhCc,GAgCgB,CAAC;AAAElB,MAAAA;AAAF,KAAD,KAAe;AACzC,WAAKD,cAAL,CAAoBC,KAApB,EACCmB,IADD,CACMb,IAAI,IAAI;AACV,YAAIA,IAAI,CAACc,KAAT,EAAgB;AACZ,eAAKH,QAAL,CAAc;AACVI,YAAAA,WAAW,EAAE;AADH,WAAd;AAGH,SAJD,MAIO;AACH,eAAKJ,QAAL,CAAc;AACVI,YAAAA,WAAW,EAAEf;AADH,WAAd;AAGH;AACJ,OAXD;AAYH,KA7Ca;;AAAA,SA+CdgB,2BA/Cc,GA+CgB,MAAM;AAChC,WAAKL,QAAL,CAAc;AACVI,QAAAA,WAAW,EAAE;AADH,OAAd;AAGH,KAnDa;;AAGV,SAAKE,KAAL,GAAa;AACTvB,MAAAA,KAAK,EAAE,EADE;AAETqB,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AA8CDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAExB,MAAAA,KAAF;AAASqB,MAAAA;AAAT,QAAyB,KAAKE,KAApC;AACA,UAAME,UAAU,GAAG;AACfC,MAAAA,WAAW,EAAE,mBADE;AAEf1B,MAAAA,KAFe;AAGfc,MAAAA,QAAQ,EAAE,KAAKA;AAHA,KAAnB;AAMA,wBACI,QAAC,WAAD;AACI,MAAA,WAAW,EAAIO,WADnB;AAEI,MAAA,2BAA2B,EAAI,KAAKH,2BAFxC;AAGI,MAAA,2BAA2B,EAAI,KAAKI,2BAHxC;AAII,MAAA,kBAAkB,EAAI,KAAKd,kBAJ/B;AAKI,MAAA,gBAAgB,EAAI,KAAKG,gBAL7B;AAMI,MAAA,UAAU,EAAIc;AANlB;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAxE2C;;AA2EhD,eAAe7B,iBAAf","sourcesContent":["import React from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport './autosuggest.css';\n\nclass ServerAutoSuggest extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            value: '',\n            suggestions: []\n        };\n    }\n\n    getSuggestions = async (value) => {\n        const inputValue = value.trim().toLowerCase();\n        let response = await fetch(\"https://restcountries.eu/rest/v2/name/\" + inputValue + \"?fields=name;region;population;languages;currencies\");\n        let data = await response.json();\n        return data;\n    };\n\n    getSuggestionValue = suggestion => suggestion.name;\n\n    renderSuggestion = suggestion => (\n        <span className=\"sugg-option\">\n            <span className=\"name\">\n                {suggestion.name} | {suggestion.region} | {suggestion.population}\n            </span>\n        </span>\n    );\n\n    onChange = (event, { newValue }) => {\n        this.setState({\n            value:newValue\n        });\n    };\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.getSuggestions(value)\n        .then(data => {\n            if (data.Error) {\n                this.setState({\n                    suggestions: []\n                });\n            } else {\n                this.setState({\n                    suggestions: data\n                });\n            }\n        })\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    render() {\n        const { value, suggestions } = this.state;\n        const inputProps = {\n            placeholder: 'Type country name',\n            value,\n            onChange: this.onChange\n        };\n\n        return (\n            <Autosuggest\n                suggestions = {suggestions}\n                onSuggestionsFetchRequested = {this.onSuggestionsFetchRequested}\n                onSuggestionsClearRequested = {this.onSuggestionsClearRequested}\n                getSuggestionValue = {this.getSuggestionValue}\n                renderSuggestion = {this.renderSuggestion}\n                inputProps = {inputProps}\n            />\n        );\n    }\n}\n\nexport default ServerAutoSuggest;"]},"metadata":{},"sourceType":"module"}